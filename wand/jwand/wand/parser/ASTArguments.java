/* Generated By:JJTree: Do not edit this line. ASTArguments.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=wand.core.WandNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package wand.parser;

import wand.core.*;

public
class ASTArguments extends SimpleNode {
    public ASTArguments(int id) {
        super(id);
    }

    public ASTArguments(WandParser p, int id) {
        super(p, id);
    }
    
    public int getNumArguments( ) {
        return jjtGetNumChildren( );
    }

    public WandNode getArgument( int argIndex ) {
        return (WandNode)jjtGetChild( argIndex );
    }
    
    public WandTypeSet getTypeSet( ) {
        WandTypeSet argumentTypes = new WandTypeSet( );
        
        for ( WandNode argument: this ) {
            WandType type = argument.getExpressionType( );
            
            assert type != null: "Expression should have a type: " + argument;
            
            argumentTypes.addType( type );
        }
        
        return argumentTypes;
    }
    
    /** Accept the visitor. **/
    public Object jjtAccept(WandParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=6658bf0804fbe96978f95740dbacb73f (do not edit this line) */
