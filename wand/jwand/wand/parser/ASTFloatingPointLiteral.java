/* Generated By:JJTree: Do not edit this line. ASTFloatingPointLiteral.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=wand.core.WandNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package wand.parser;

import wand.core.*;

public
class ASTFloatingPointLiteral extends ASTLiteral {
    private Double literal;
    
    public ASTFloatingPointLiteral(int id) {
        super(id);
    }
    
    public ASTFloatingPointLiteral(WandParser p, int id) {
        super(p, id);
    }
    
    public Double getDouble( ) {
        return literal;
    }
    
    public void fromString( String str ) {
        literal = Double.parseDouble( str );
    }
    
    public WandType getExpressionType() {
        // FIXME: suffixes?
        return WandTypeSystem.getBasicType( WandBasicType.Float32 );
    }
    
    /** Accept the visitor. **/
    public Object jjtAccept(WandParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }

}
/* JavaCC - OriginalChecksum=0a696fd3b98e861e952304dc2939d31d (do not edit this line) */
